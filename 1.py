#!/usr/bin/env python3
"""
–®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º–∏ push-–∞–Ω–∞–ª—ñ–∑—É
–ó–∞–ø—É—Å–∫: python quick_test.py
"""

def test_basic_imports():
    """–ë–∞–∑–æ–≤–∏–π —Ç–µ—Å—Ç —ñ–º–ø–æ—Ä—Ç—ñ–≤"""
    print("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–æ–≤–∏—Ö —ñ–º–ø–æ—Ä—Ç—ñ–≤...")
    
    try:
        # –¢–µ—Å—Ç—É—î–º–æ config
        from config.database_config import DatabaseManager
        print("   ‚úÖ DatabaseManager —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ")
        
        from config.constants import PUSH_START_DATE, TARGET_APPS
        print("   ‚úÖ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ")
        
        # –¢–µ—Å—Ç—É—î–º–æ src
        from src.database import PushDatabase  
        print("   ‚úÖ PushDatabase —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ")
        
        from src.data_loader import DataLoader
        print("   ‚úÖ DataLoader —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

def test_objects_creation():
    """–¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤"""
    print("\nüèóÔ∏è –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤...")
    
    try:
        from src.database import PushDatabase
        from src.data_loader import DataLoader
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç–∏ –±–µ–∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î
        db = PushDatabase(cache_enabled=False)
        loader = DataLoader(cache_enabled=False)
        
        print("   ‚úÖ –û–±'—î–∫—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤: {e}")
        return False

def test_constants():
    """–¢–µ—Å—Ç —Ä–æ–±–æ—Ç–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç"""
    print("\nüìã –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç...")
    
    try:
        from config.constants import (
            PUSH_START_DATE, 
            TARGET_APPS, 
            get_country_tier,
            TIER_1_COUNTRIES
        )
        
        print(f"   üìÖ –î–∞—Ç–∏: {PUSH_START_DATE}")
        print(f"   üì± –ó–∞—Å—Ç–æ—Å—É–Ω–∫–∏: {TARGET_APPS}")
        print(f"   üåç Tier 1: {TIER_1_COUNTRIES[:3]}...")
        
        # –¢–µ—Å—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é tier
        tier = get_country_tier('US')
        print(f"   üåé US -> {tier}")
        
        print("   ‚úÖ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –ø—Ä–∞—Ü—é—é—Ç—å")
        return True
        
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç: {e}")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üöÄ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º–∏ push-–∞–Ω–∞–ª—ñ–∑—É")
    print("=" * 45)
    
    tests = [
        test_basic_imports,
        test_objects_creation, 
        test_constants
    ]
    
    results = [test() for test in tests]
    passed = sum(results)
    total = len(results)
    
    print("\n" + "=" * 45)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total} —Ç–µ—Å—Ç—ñ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –ë–∞–∑–æ–≤–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∞—Ü—é—î!")
        print("\nüöÄ –¢–µ–ø–µ—Ä –º–æ–∂–µ—à:")
        print("   1. python test_system.py - –ø–æ–≤–Ω–∏–π —Ç–µ—Å—Ç")
        print("   2. jupyter notebook - –∑–∞–ø—É—Å–∫ notebook")
        print("   3. –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∞–Ω–∞–ª—ñ–∑—É –¥–∞–Ω–∏—Ö")
    else:
        print("‚ö†Ô∏è –Ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º")
        print("üîß –ü–µ—Ä–µ–≤—ñ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É")

if __name__ == "__main__":
    main()